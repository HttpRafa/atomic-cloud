package node:driver;

interface log {
    variant level {
        debug,
        info,
        warn,
        error,
    }
    log-string: func(level: level, message: string);
}

interface api {
    get-name: func() -> string;
}

interface bridge {
    // Init
    record information {
        authors: list<string>,
        version: string,
        ready: bool,
    }

    // Nodes
    variant capability {
        limited-memory(u32),
        unlimited-memory(bool),
        max-servers(u16),
        sub-node(string)
    }

    resource generic-driver {
        constructor();
        init: func() -> information;
        init-node: func(name: string, capabilities: list<capability>) -> bool;
    }
}

world driver {
    export bridge;
    import log;
    import api;
}