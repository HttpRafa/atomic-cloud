use crate::exports::cloudlet::driver::bridge::{Capabilities, GenericCloudlet, GuestGenericDriver, Information, RemoteController};

pub mod cloudlet;

// Include the build information generated by build.rs
include!(concat!(env!("OUT_DIR"), "/build_info.rs"));

pub const AUTHORS: [&str; 1] = ["HttpRafa"];

pub struct Local {
    /* Cloud Identification */
    cloud_identifier: String,
}

impl GuestGenericDriver for Local {
    fn new(cloud_identifier: String) -> Self {
        Self {
            cloud_identifier,
        }
    }

    fn init(&self) -> Information {
        Information {
            authors: AUTHORS.iter().map(|&author| author.to_string()).collect(),
            version: VERSION.to_string(),
            ready: false,
        }
    }

    fn init_cloudlet(
        &self,
        _name: String,
        _capabilities: Capabilities,
        _controller: RemoteController,
    ) -> Result<GenericCloudlet, String> {
        Err("Not implemented".to_string())
    }
}

pub struct LocalCloudletWrapper {
}