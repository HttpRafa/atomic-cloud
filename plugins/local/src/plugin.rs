use std::cell::{Cell, RefCell};

use crate::generated::exports::plugin::system::bridge::{
    Capabilities, ErrorMessage, GenericNode, GuestGenericPlugin, Information, ScopedErrors,
};

// Include the build information generated by build.rs
include!(concat!(env!("OUT_DIR"), "/build_info.rs"));

pub const AUTHORS: [&str; 1] = ["HttpRafa"];

pub struct Local {
    // RefCell is used to allow mutable access to the inner value
}

impl GuestGenericPlugin for Local {
    async fn new(_: String) -> Self {
        todo!()
    }

    async fn init(&self) -> Information {
        todo!()
    }

    async fn init_node(
        &self,
        name: String,
        capabilities: Capabilities,
        controller: String,
    ) -> Result<GenericNode, ErrorMessage> {
        todo!()
    }

    async fn tick(&self) -> Result<(), ScopedErrors> {
        todo!()
    }

    async fn shutdown(&self) -> Result<(), ScopedErrors> {
        todo!()
    }
}
