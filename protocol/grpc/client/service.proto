syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.atomic.cloud.grpc.client";

package client;

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

import "common/server.proto";
import "common/group.proto";
import "common/user.proto";
import "common/notify.proto";

import "client/user.proto";
import "client/transfer.proto";
import "client/channel.proto";

service ClientService {
  // Heartbeat
  rpc Beat(google.protobuf.Empty) returns (google.protobuf.Empty);

  // Ready state
  rpc SetReady(google.protobuf.BoolValue) returns (google.protobuf.Empty);

  // Health
  rpc SetRunning(google.protobuf.Empty) returns (google.protobuf.Empty);
  rpc RequestStop(google.protobuf.Empty) returns (google.protobuf.Empty);

  // User operations
  rpc UserConnected(User.ConnectedReq) returns (google.protobuf.Empty);
  rpc UserDisconnected(User.DisconnectedReq) returns (google.protobuf.Empty);
  /// Info
  rpc GetUser(google.protobuf.StringValue) returns (common.CommonUser.Item);
  rpc GetUserFromId(google.protobuf.StringValue) returns (common.CommonUser.Item);
  rpc GetUsers(google.protobuf.Empty) returns (common.CommonUser.List);
  rpc GetUserCount(google.protobuf.Empty) returns (google.protobuf.UInt32Value);

  // Transfer operations
  rpc TransferUsers(Transfer.TransferReq) returns (google.protobuf.UInt32Value);
  rpc SubscribeToTransfers(google.protobuf.Empty) returns (stream Transfer.TransferRes);

  // Channel operations
  rpc PublishMessage(Channel.Msg) returns (google.protobuf.UInt32Value);
  rpc SubscribeToChannel(google.protobuf.StringValue) returns (stream Channel.Msg);

  // Group operations
  rpc GetGroup(google.protobuf.StringValue) returns (common.CommonGroup.Short);
  rpc GetGroups(google.protobuf.Empty) returns (common.CommonGroup.List);

  // Server operations
  rpc GetServer(google.protobuf.StringValue) returns (common.CommonServer.Short);
  rpc GetServers(google.protobuf.Empty) returns (common.CommonServer.List);

  // Version info
  rpc GetProtoVer(google.protobuf.Empty) returns (google.protobuf.UInt32Value);
  rpc GetCtrlVer(google.protobuf.Empty) returns (google.protobuf.StringValue);

  // Notify operations
  rpc SubscribeToPowerEvents(google.protobuf.Empty) returns (stream common.Notify.PowerEvent);
  rpc SubscribeToReadyEvents(google.protobuf.Empty) returns (stream common.Notify.ReadyEvent);
}