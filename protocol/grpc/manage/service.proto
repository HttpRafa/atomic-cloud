syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.atomic.cloud.grpc.manage";

package manage;

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

import "common/notify.proto";

import "manage/resource.proto";
import "manage/plugin.proto";
import "manage/node.proto";
import "manage/group.proto";
import "manage/server.proto";
import "manage/screen.proto";
import "manage/user.proto";
import "manage/transfer.proto";

service ManageService {
  rpc RequestStop(google.protobuf.Empty) returns (google.protobuf.Empty);

  // Resource operations
  rpc SetResource(Resource.SetReq) returns (google.protobuf.Empty);
  rpc DeleteResource(Resource.DelReq) returns (google.protobuf.Empty);

  // Plugin operations
  rpc GetPlugins(google.protobuf.Empty) returns (Plugin.List);

  // Node operations
  rpc CreateNode(Node.Detail) returns (google.protobuf.Empty);
  rpc UpdateNode(Node.UpdateReq) returns (Node.Detail);
  rpc GetNode(google.protobuf.StringValue) returns (Node.Detail);
  rpc GetNodes(google.protobuf.Empty) returns (Node.List);

  // Group operations
  rpc CreateGroup(Group.Detail) returns (google.protobuf.Empty);
  rpc UpdateGroup(Group.UpdateReq) returns (Group.Detail);
  rpc GetGroup(google.protobuf.StringValue) returns (Group.Detail);
  rpc GetGroups(google.protobuf.Empty) returns (Group.List);

  // Server operations
  rpc ScheduleServer(Server.Proposal) returns (google.protobuf.StringValue);
  rpc GetServer(google.protobuf.StringValue) returns (Server.Detail);
  rpc GetServers(google.protobuf.Empty) returns (Server.List);

  // Screen operations
  rpc WriteToScreen(Screen.WriteReq) returns (google.protobuf.Empty);
  rpc SubscribeToScreen(google.protobuf.StringValue) returns (stream Screen.Lines);

  // User operations
  rpc GetUsers(google.protobuf.Empty) returns (User.List);

  // Transfer operations
  rpc TransferUsers(Transfer.TransferReq) returns (google.protobuf.UInt32Value);

  // Version info
  rpc GetProtoVer(google.protobuf.Empty) returns (google.protobuf.UInt32Value);
  rpc GetCtrlVer(google.protobuf.Empty) returns (google.protobuf.StringValue);

  // Notify operations
  rpc SubscribeToPowerEvents(google.protobuf.Empty) returns (stream common.Notify.PowerEvent);
}