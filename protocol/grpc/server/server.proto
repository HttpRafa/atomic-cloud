syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.atomic.cloud.grpc.server";

package server;
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

service ServerService {    
    // Heartbeat
    rpc BeatHeart(google.protobuf.Empty) returns (google.protobuf.Empty);

    // Ready
    rpc MarkReady(google.protobuf.Empty) returns (google.protobuf.Empty);
    rpc MarkNotReady(google.protobuf.Empty) returns (google.protobuf.Empty);

    // Health
    rpc MarkRunning(google.protobuf.Empty) returns (google.protobuf.Empty);
    rpc RequestStop(google.protobuf.Empty) returns (google.protobuf.Empty); // Implies not ready

    // Users
    rpc UserConnected(User) returns (google.protobuf.Empty);
    rpc UserDisconnected(User) returns (google.protobuf.Empty);

    // Transfers
    rpc TransferAllUsers(TransferTarget) returns (google.protobuf.UInt32Value);

    // Channels
    rpc SendMessageToChannel(ChannelMessage) returns (google.protobuf.UInt32Value);
    rpc UnsubscribeFromChannel(google.protobuf.StringValue) returns (google.protobuf.Empty);
    rpc SubscribeToChannel(google.protobuf.StringValue) returns (stream ChannelMessage);
}

message User {
    string name = 1;
    string uuid = 2;
}

message TransferTarget {
    optional string server = 1;
    optional string group = 2;
}

message ChannelMessage {
    string channel = 1;
    uint32 type = 2;
    string data = 3;
    uint64 timestamp = 4;
}